#include "s21_decimal.h"

#test is_less1
s21_decimal value_1 = {0};
s21_decimal value_2 = {0};
s21_from_int_to_decimal(123, &value_1);
s21_from_int_to_decimal(1, &value_2);
ck_assert_int_eq(0, s21_is_less(value_1, value_2));

#test is_less2
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-1, &value_1);
  s21_from_int_to_decimal(1, &value_2);
ck_assert_int_eq(1, s21_is_less(value_1, value_2));

#test is_less3
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(12, &value_1);
  s21_from_int_to_decimal(11111, &value_2);
ck_assert_int_eq(1, s21_is_less(value_1, value_2));

#test is_less4
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(123, &value_1);
  s21_from_int_to_decimal(-111231, &value_2);
ck_assert_int_eq(0, s21_is_less(value_1, value_2));

#test is_less5
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(322, &value_1);
  s21_from_int_to_decimal(322, &value_2);
ck_assert_int_eq(0, s21_is_less(value_1, value_2));

#test is_less7
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-123322, &value_1);
  s21_from_int_to_decimal(-322, &value_2);
ck_assert_int_eq(1, s21_is_less(value_1, value_2));

#test is_less8
s21_decimal value_1 = {0};
s21_decimal value_2 = {0};
s21_from_int_to_decimal(0, &value_1);
s21_from_int_to_decimal(-0, &value_2);
ck_assert_int_eq(0, s21_is_less(value_1, value_2));

#test is_less2_1
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_float_to_decimal(-123.322, &value_1);
  s21_from_float_to_decimal(-3.22, &value_2);
ck_assert_int_eq(1, s21_is_less(value_1, value_2));

#test is_less2_2
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_float_to_decimal(123.322, &value_1);
  s21_from_float_to_decimal(3.22, &value_2);
ck_assert_int_eq(0, s21_is_less(value_1, value_2));

#test is_less2_4
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_float_to_decimal(3.22, &value_1);
  s21_from_float_to_decimal(3.22, &value_2);
ck_assert_int_eq(0, s21_is_less(value_1, value_2));

#test is_less_or_equal1
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(123, &value_1);
  s21_from_int_to_decimal(1, &value_2);
ck_assert_int_eq(0, s21_is_less_or_equal(value_1, value_2));

#test is_less_or_equal2
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-1, &value_1);
  s21_from_int_to_decimal(1, &value_2);
ck_assert_int_eq(1, s21_is_less_or_equal(value_1, value_2));

#test is_less_or_equal3
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(1123, &value_1);
  s21_from_int_to_decimal(111111, &value_2);
ck_assert_int_eq(1, s21_is_less_or_equal(value_1, value_2));

#test is_less_or_equal4
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(123, &value_1);
  s21_from_int_to_decimal(1123212, &value_2);
ck_assert_int_eq(1, s21_is_less_or_equal(value_1, value_2));

#test is_less_or_equal5
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(0, &value_1);
  s21_from_int_to_decimal(0, &value_2);
ck_assert_int_eq(1, s21_is_less_or_equal(value_1, value_2));

#test is_less_or_equal6
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(322, &value_1);
  s21_from_int_to_decimal(322, &value_2);
ck_assert_int_eq(1, s21_is_less_or_equal(value_1, value_2));

#test is_less_or_equal7
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-322, &value_1);
  s21_from_int_to_decimal(-322, &value_2);
ck_assert_int_eq(1, s21_is_less_or_equal(value_1, value_2));

#test is_less_or_equal8
s21_decimal value_1 = {0};
s21_decimal value_2 = {0};
s21_from_int_to_decimal(0, &value_1);
s21_from_int_to_decimal(-0, &value_2);
ck_assert_int_eq(1, s21_is_less_or_equal(value_1, value_2));


#test is_greater1
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(123, &value_1);
  s21_from_int_to_decimal(1, &value_2);
ck_assert_int_eq(1, s21_is_greater(value_1, value_2));

#test is_greater2
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-1, &value_1);
  s21_from_int_to_decimal(1, &value_2);
ck_assert_int_eq(0, s21_is_greater(value_1, value_2));

#test is_greater3
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(112, &value_1);
  s21_from_int_to_decimal(11111, &value_2);
ck_assert_int_eq(0, s21_is_greater(value_1, value_2));

#test is_greater4
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(123, &value_1);
  s21_from_int_to_decimal(112323, &value_2);
ck_assert_int_eq(0, s21_is_greater(value_1, value_2));

#test is_greater5
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(123, &value_1);
  s21_from_int_to_decimal(100123, &value_2);
ck_assert_int_eq(0, s21_is_greater(value_1, value_2));

#test is_greater6
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(322, &value_1);
  s21_from_int_to_decimal(322, &value_2);
ck_assert_int_eq(0, s21_is_greater(value_1, value_2));

#test is_greater7
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-1233322, &value_1);
  s21_from_int_to_decimal(-322, &value_2);
ck_assert_int_eq(0, s21_is_greater(value_1, value_2));

#test is_greater8
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(0, &value_1);
  s21_from_int_to_decimal(-0, &value_2);
ck_assert_int_eq(0, s21_is_greater(value_1, value_2));

#test is_greater_or_equal1
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(123, &value_1);
  s21_from_int_to_decimal(1, &value_2);
ck_assert_int_eq(1, s21_is_greater_or_equal(value_1, value_2));

#test is_greater_or_equal2
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-1, &value_1);
  s21_from_int_to_decimal(1, &value_2);
ck_assert_int_eq(0, s21_is_greater_or_equal(value_1, value_2));

#test is_greater_or_equal3
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(1123, &value_1);
  s21_from_int_to_decimal(111111, &value_2);
ck_assert_int_eq(0, s21_is_greater_or_equal(value_1, value_2));

#test is_greater_or_equal4
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(123, &value_1);
  s21_from_int_to_decimal(1123212, &value_2);
ck_assert_int_eq(0, s21_is_greater_or_equal(value_1, value_2));

#test is_greater_or_equal5
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(0, &value_1);
  s21_from_int_to_decimal(0, &value_2);
ck_assert_int_eq(1, s21_is_greater_or_equal(value_1, value_2));

#test is_greater_or_equal6
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(322, &value_1);
  s21_from_int_to_decimal(322, &value_2);
ck_assert_int_eq(1, s21_is_greater_or_equal(value_1, value_2));

#test is_greater_or_equal7
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-322, &value_1);
  s21_from_int_to_decimal(-322, &value_2);
ck_assert_int_eq(1, s21_is_greater_or_equal(value_1, value_2));

#test is_greater_or_equal8
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(0, &value_1);
  s21_from_int_to_decimal(-0, &value_2);
ck_assert_int_eq(1, s21_is_greater_or_equal(value_1, value_2));

#test is_equal1
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(322, &value_1);
  s21_from_int_to_decimal(322, &value_2);
ck_assert_int_eq(1, s21_is_equal(value_1, value_2));

#test is_equal2
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-322, &value_1);
  s21_from_int_to_decimal(-322, &value_2);
ck_assert_int_eq(1, s21_is_equal(value_1, value_2));

#test is_equal3
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(322, &value_1);
  s21_from_int_to_decimal(22, &value_2);
ck_assert_int_eq(0, s21_is_equal(value_1, value_2));

#test is_equal4
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-22, &value_1);
  s21_from_int_to_decimal(-322, &value_2);
ck_assert_int_eq(0, s21_is_equal(value_1, value_2));

#test is_equal5
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-0, &value_1);
  s21_from_int_to_decimal(0, &value_2);
ck_assert_int_eq(1, s21_is_equal(value_1, value_2));

#test is_equal6
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(0, &value_1);
  s21_from_int_to_decimal(0, &value_2);
ck_assert_int_eq(1, s21_is_equal(value_1, value_2));

#test is_equal7
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(0, &value_1);
  s21_from_int_to_decimal(-0, &value_2);
ck_assert_int_eq(1, s21_is_equal(value_1, value_2));

#test is_equal8
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-0, &value_1);
  s21_from_int_to_decimal(-0, &value_2);
ck_assert_int_eq(1, s21_is_equal(value_1, value_2));

#test is_equal9
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(1023, &value_1);
  s21_from_int_to_decimal(-500000, &value_2);
ck_assert_int_eq(0, s21_is_equal(value_1, value_2));

#test is_equal10
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-1023, &value_1);
  s21_from_int_to_decimal(500000, &value_2);
ck_assert_int_eq(0, s21_is_equal(value_1, value_2));

#test is_not_equal1
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(322, &value_1);
  s21_from_int_to_decimal(322, &value_2);
ck_assert_int_eq(0, s21_is_not_equal(value_1, value_2));

#test is_not_equal2
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-322, &value_1);
  s21_from_int_to_decimal(-322, &value_2);
ck_assert_int_eq(0, s21_is_not_equal(value_1, value_2));

#test is_not_equal3
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(322, &value_1);
  s21_from_int_to_decimal(22, &value_2);
ck_assert_int_eq(1, s21_is_not_equal(value_1, value_2));

#test is_not_equal4
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-22, &value_1);
  s21_from_int_to_decimal(-322, &value_2);
ck_assert_int_eq(1, s21_is_not_equal(value_1, value_2));

#test is_not_equal5
  s21_decimal value_1 = {0};
  s21_decimal value_2 = {0};
  s21_from_int_to_decimal(-0, &value_1);
  s21_from_int_to_decimal(0, &value_2);
ck_assert_int_eq(0, s21_is_not_equal(value_1, value_2));